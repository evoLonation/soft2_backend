// Code generated by goctl. DO NOT EDIT!
// Source: file.proto

package fileclient

import (
	"context"

	"soft2_backend/service/file/rpc/types/file"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApplyIdReq   = file.ApplyIdReq
	HelpIdReq    = file.HelpIdReq
	ScholarIdReq = file.ScholarIdReq
	UrlReply     = file.UrlReply
	UserIdReq    = file.UserIdReq

	File interface {
		GetUserAvatar(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UrlReply, error)
		GetScholarAvatar(ctx context.Context, in *ScholarIdReq, opts ...grpc.CallOption) (*UrlReply, error)
		GetHelpFile(ctx context.Context, in *ApplyIdReq, opts ...grpc.CallOption) (*UrlReply, error)
		GetApplyFile(ctx context.Context, in *HelpIdReq, opts ...grpc.CallOption) (*UrlReply, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

func (m *defaultFile) GetUserAvatar(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UrlReply, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.GetUserAvatar(ctx, in, opts...)
}

func (m *defaultFile) GetScholarAvatar(ctx context.Context, in *ScholarIdReq, opts ...grpc.CallOption) (*UrlReply, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.GetScholarAvatar(ctx, in, opts...)
}

func (m *defaultFile) GetHelpFile(ctx context.Context, in *ApplyIdReq, opts ...grpc.CallOption) (*UrlReply, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.GetHelpFile(ctx, in, opts...)
}

func (m *defaultFile) GetApplyFile(ctx context.Context, in *HelpIdReq, opts ...grpc.CallOption) (*UrlReply, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.GetApplyFile(ctx, in, opts...)
}
