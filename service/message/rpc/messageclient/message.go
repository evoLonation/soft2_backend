// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package messageclient

import (
	"context"

	"soft2_backend/service/message/rpc/types/message"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateMessageReply = message.CreateMessageReply
	CreateMessageReq   = message.CreateMessageReq

	Message interface {
		CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageReply, error)
	}

	defaultMessage struct {
		cli zrpc.Client
	}
)

func NewMessage(cli zrpc.Client) Message {
	return &defaultMessage{
		cli: cli,
	}
}

func (m *defaultMessage) CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageReply, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.CreateMessage(ctx, in, opts...)
}
