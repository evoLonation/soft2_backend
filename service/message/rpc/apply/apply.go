// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package apply

import (
	"context"
	"soft2_backend/service/message/rpc/message"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateMessageReply = message.CreateMessageReply
	CreateMessageReq   = message.CreateMessageReq

	Apply interface {
		CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageReply, error)
	}

	defaultApply struct {
		cli zrpc.Client
	}
)

func NewApply(cli zrpc.Client) Apply {
	return &defaultApply{
		cli: cli,
	}
}

func (m *defaultApply) CreateMessage(ctx context.Context, in *CreateMessageReq, opts ...grpc.CallOption) (*CreateMessageReply, error) {
	client := message.NewApplyClient(m.cli.Conn())
	return client.CreateMessage(ctx, in, opts...)
}
