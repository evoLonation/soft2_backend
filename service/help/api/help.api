type (
	ReqsReq {
		Start int64 `json:"start"`
		End   int64 `json:"end"`
		Order int64 `json:"order"`
	}

	ReqsReply {
		ReqList     []Request `json:"requests"`
		RequestsNum int64     `json:"requests_num"`
	}

	ReqSearchReq {
		Start         int64  `json:"start"`
		End           int64  `json:"end"`
		SearchContent string `json:"search_content"`
	}

	ReqSearchReply {
		ReqList     []Search `json:"requests"`
		RequestsNum int64    `json:"requests_num"`
	}

	BeforeHelpReq {
		RequestId int64 `json:"request_id"`
	}

	BeforeHelpReply {
		Status int64 `json:"status"`
	}

	UserInfoReq {
	}

	UserInfoReply {
		Request int64 `json:"request"`
		Help    int64 `json:"help"`
		Wealth  int64 `json:"wealth"`
	}

	UserReqReq {
		Start int64 `json:"start"`
		End   int64 `json:"end"`
		Type  int64 `json:"type"`
	}

	UserReqReply {
		Requests   []UserReq `json:"requests"`
		RequestNum int64     `json:"request_num"`
	}

	AddRequestsReq {
		Title    string   `json:"title"`
		Author   []string `json:"author"`
		Magazine string   `json:"magazine"`
		Link     string   `json:"link"`
		Content  string   `json:"content"`
		Wealth   int64    `json:"wealth"`
	}

	AddRequestsReply {
	}

	UserHelpReq {
		Start int64 `json:"start"`
		End   int64 `json:"end"`
		Type  int64 `json:"type"`
	}

	UserHelpReply {
		Requests []UserReq `json:"requests"`
		HelpNum  int64     `json:"help_num"`
	}

	DownloadReq {
		RequestId int64 `json:"request_id"`
	}

	DownloadReply {
		Url string `json:"url"`
	}

	ConfirmedReq {
		RequestId int64 `json:"request_id"`
	}

	ComplaintReq {
		RequestId int64  `json:"request_id"`
		Content   string `json:"content"`
	}
)
type Request {
	Id             int64  `json:"request_id"`
	Title          string `json:"title"`
	Author         string `json:"author"`
	Magazine       string `json:"magazine"`
	Link           string `json:"link"`
	RequestTime    string `json:"request_time"`
	RequestContent string `json:"request_content"`
	Wealth         int64  `json:"wealth"`
}
type Search {
	HelpId         int64  `json:"help_id"`
	ReqTitle       string `json:"title"`
	RequestId      int64  `json:"request_id"`
	RequestTime    string `json:"request_time"`
	RequestContent string `json:"request_content"`
	Author         string `json:"author"`
	Magazine       string `json:"magazine"`
	Link           string `json:"link"`
	Wealth         int64  `json:"wealth"`
	RequestStatus  int64  `json:"request_status"`
}
type UserReq {
	Type           int64  `json:"type"`
	HelpId         int64  `json:"help_id"`
	ReqTitle       string `json:"title"`
	RequestId      int64  `json:"request_id"`
	RequestTime    string `json:"request_time"`
	RequestContent string `json:"request_content"`
	Author         string `json:"author"`
	Magazine       string `json:"magazine"`
	Link           string `json:"link"`
	Wealth         int64  `json:"wealth"`
}

@server(
	jwt: Auth
)
service help-api {
	@handler requests
	post /api/help/requests (ReqsReq) returns (ReqsReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler search
	post /api/help/search (ReqSearchReq) returns (ReqSearchReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler beforeHelp
	post /api/help/before-help (BeforeHelpReq) returns (BeforeHelpReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler userInfo
	post /api/help/user-info (UserInfoReq) returns (UserInfoReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler userRequest
	post /api/help/user-request (UserReqReq) returns (UserReqReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler addRequest
	post /api/help/new-requests (AddRequestsReq) returns (AddRequestsReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler userHelp
	post /api/help/user-help (UserHelpReq) returns (UserHelpReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler download
	post /api/help/download (DownloadReq) returns (DownloadReply)
}

@server(
	jwt: Auth
)
service help-api {
	@handler confirmed
	post /api/help/confirmed (ConfirmedReq) returns ()
}

@server(
	jwt: Auth
)
service help-api {
	@handler complaint
	post /api/help/complaint (ComplaintReq) returns ()
}