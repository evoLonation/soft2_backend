// Code generated by goctl. DO NOT EDIT!
// Source: help.proto

package helpclient

import (
	"context"

	"soft2_backend/service/help/rpc/types/help"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdReq       = help.IdReq
	Reply       = help.Reply
	UpdateReq   = help.UpdateReq
	WealthReply = help.WealthReply
	WealthReq   = help.WealthReq

	Help interface {
		RegisterUser(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*Reply, error)
		UpDateStatus(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*Reply, error)
		GetUserWealth(ctx context.Context, in *WealthReq, opts ...grpc.CallOption) (*WealthReply, error)
	}

	defaultHelp struct {
		cli zrpc.Client
	}
)

func NewHelp(cli zrpc.Client) Help {
	return &defaultHelp{
		cli: cli,
	}
}

func (m *defaultHelp) RegisterUser(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*Reply, error) {
	client := help.NewHelpClient(m.cli.Conn())
	return client.RegisterUser(ctx, in, opts...)
}

func (m *defaultHelp) UpDateStatus(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*Reply, error) {
	client := help.NewHelpClient(m.cli.Conn())
	return client.UpDateStatus(ctx, in, opts...)
}

func (m *defaultHelp) GetUserWealth(ctx context.Context, in *WealthReq, opts ...grpc.CallOption) (*WealthReply, error) {
	client := help.NewHelpClient(m.cli.Conn())
	return client.GetUserWealth(ctx, in, opts...)
}
