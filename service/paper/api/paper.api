service paper-api {
	@handler Paper
	post /api/search/paper (PaperRequest) returns (PaperResponse)
	
	@handler Scholar
	post /api/search/scholar (ScholarRequest) returns (ScholarResponse)
	
	@handler AutoComplete
	post /api/search/auto-complete (AutoCompleteRequest) returns (AutoCompleteResponse)
	
	@handler PaperDetail
	post /api/paper (PaperDetailRequest) returns (PaperDetailResponse);
	
	@handler PaperCite
	post /api/paper/cite (PaperCiteRequest) returns (PaperCiteResponse);
	
	@handler PaperRelationNet
	post /api/paper/relation-net (PaperRelationNetRequest) returns (PaperRelationNetResponse);
	
	@handler PaperSimilarNet
	post /api/paper/similar-net (PaperSimilarNetRequest) returns (PaperSimilarNetResponse);
	
	@handler ScholarBasic
	post /api/scholar/basic (ScholarBasicRequest) returns (ScholarBasicResponse);
	
	@handler ScholarCooperation
	post /api/scholar/coop-list (ScholarCooperationRequest) returns (ScholarCooperationResponse);
	
	@handler ScholarPapers
	post /api/scholar/papers (ScholarPapersRequest) returns (ScholarPapersResponse);
	
	@handler ScholarBarchart
	post /api/scholar/barchart (ScholarBarchartRequest) returns (ScholarBarchartResponse);
	
	@handler ScholarRelationNet
	post /api/scholar/relation-net (ScholarRelationNetRequest) returns (ScholarRelationNetResponse);
	
	@handler ScholarClaim
	post /api/scholar/claim (ScholarClaimRequest) returns (ScholarClaimResponse);
	
	@handler ScholarGetAvatar
	post /api/scholar/get-avatar (ScholarGetAvatarRequest) returns (ScholarGetAvatarResponse);
	
	@handler MovePaper
	post /api/admin/move-paper (MovePaperRequest) returns (MovePaperResponse);
	
	@handler FieldPaper
	post /api/field/paper (FieldPaperRequest) returns (FieldPaperResponse);
	
	@handler FieldScholar
	post /api/field/scholar (FieldScholarRequest) returns (FieldScholarResponse);
	
	@handler HomeInfo
	post /api/home/info (HomeInfoRequest) returns (HomeInfoResponse);
}

type PaperRequest {
	Content   []PaperRequestJSON `json:"search_content"`
	StartYear int                `json:"start_year"`
	EndYear   int                `json:"end_year"`
	SortType  int                `json:"sort_type"`
	Start     int                `json:"start"`
	End       int                `json:"end"`
}

type PaperRequestJSON {
	Type       int    `json:"type"`
	SearchType int    `json:"search_type"`
	IsExact    int    `json:"is_exact"`
	Content    string `json:"content"`
}

type PaperResponse {
	PaperNum int                 `json:"paper_num"`
	Papers   []PaperResponseJSON `json:"papers"`
	Themes   []string            `json:"themes"`
	Years    []int               `json:"years"`
}

type PaperResponseJSON {
	Id        string       `json:"id"`
	Title     string       `json:"title"`
	Abstract  string       `json:"abstract"`
	Authors   []AuthorJSON `json:"authors"`
	Year      int          `json:"year"`
	NCitation int          `json:"n_citation"`
	Publisher string       `json:"publisher"`
}

type AuthorJSON {
	Name  string `json:"name"`
	Id    string `json:"id"`
	HasId bool   `json:"has_id"`
}

type ScholarRequest {
	Name        string `json:"name, optional"`
	Institution string `json:"institution, optional"`
	Start       int    `json:"start"`
	End         int    `json:"end"`
}

type ScholarResponse {
	ScholarNum int                   `json:"scholar_num"`
	Scholar    []ScholarResponseJSON `json:"scholar"`
}

type ScholarResponseJSON {
	Id          string   `json:"id"`
	Name        string   `json:"name"`
	Institution []string `json:"institution"`
	PaperNum    int      `json:"paper_num"`
}

type AutoCompleteRequest {
	SearchType int    `json:"search_type"`
	Text       string `json:"text"`
}

type AutoCompleteResponse {
	AutoCompletes []string `json:"auto_completes"`
}

type PaperDetailRequest {
	Id string `json:"id"`
}

type PaperDetailResponse {
	Id         string       `json:"id"`
	Title      string       `json:"title"`
	Abstract   string       `json:"abstract"`
	Authors    []AuthorJSON `json:"authors"`
	Doi        string       `json:"doi"`
	ISBN       string       `json:"isbn"`
	Org        string       `json:"org"`
	Keywords   []string     `json:"keywords"`
	Year       int          `json:"year"`
	NCitation  int          `json:"n_citation"`
	Publisher  string       `json:"publisher"`
	References []PaperJSON  `json:"references"`
	Similars   []PaperJSON  `json:"similars"`
	Urls       []string     `json:"urls"`
}

type PaperJSON {
	Id     string `json:"id"`
	Title  string `json:"title"`
	Author string `json:"author"`
	Year   int    `json:"year"`
}

type PaperCiteRequest {
	Id string `json:"id"`
}

type PaperCiteResponse {
	Gb     string `json:"gb"`
	Mla    string `json:"mla"`
	Apa    string `json:"apa"`
	Bibtex string `json:"bibix"`
	CajCd  string `json:"caj_cd"`
}

type PaperRelationNetRequest {
	Id string `json:"id"`
}

type PaperRelationNetResponse {
	Nodes []PaperNodeJSON `json:"nodes"`
	Edges []EdgeJSON      `json:"edges"`
}

type PaperNodeJSON {
	Id    string    `json:"id"`
	Label string    `json:"label"`
	Size  int       `json:"size"`
	Type  string    `json:"type"`
	Style StyleJSON `json:"style"`
	Info  InfoJSON  `json:"info"`
}

type StyleJSON {
	Fill string `json:"fill"`
}

type InfoJSON {
	Id       string       `json:"id"`
	Title    string       `json:"title"`
	Abstract string       `json:"abstract"`
	Authors  []AuthorJSON `json:"authors"`
	Year     int          `json:"year"`
}

type EdgeJSON {
	Source string `json:"source"`
	Target string `json:"target"`
}

type PaperSimilarNetRequest {
	Id string `json:"id"`
}

type PaperSimilarNetResponse {
	Nodes []PaperNodeJSON `json:"nodes"`
	Edges []EdgeJSON      `json:"edges"`
}

type ScholarBasicRequest {
	ScholarId string `json:"scholar_id"`
}

type ScholarBasicResponse {
	ScholarId   string    `json:"scholar_id"`
	Name        string    `json:"name"`
	Institution []string  `json:"institution"`
	Position    string    `json:"position"`
	RefNum      int       `json:"ref_num"`
	AchNum      int       `json:"ach_num"`
	HIndex      int       `json:"h_index"`
	Years       []int     `json:"years"`
	Tags        []TagJSON `json:"tags"`
}

type TagJSON {
	T string `json:"t"`
	W int    `json:"w"`
}

type ScholarCooperationRequest {
	ScholarId string `json:"scholar_id"`
}

type ScholarCooperationResponse {
	CoopList []CoopJSON `json:"coop_list"`
}

type CoopJSON {
	ScholarId   string   `json:"id"`
	Name        string   `json:"name"`
	Institution []string `json:"institution"`
	Time        int      `json:"time"`
}

type ScholarPapersRequest {
	ScholarId string `json:"scholar_id"`
	IsFirst   bool   `json:"is_first, optional"`
	Year      int    `json:"year, optional"`
	TimeOrder bool   `json:"time_order, optional"`
	Start     int    `json:"start"`
	End       int    `json:"end"`
}

type ScholarPapersResponse {
	PaperNum  int                 `json:"paper_num"`
	StartYear int                 `json:"start_year"`
	EndYear   int                 `json:"end_year"`
	Papers    []PaperResponseJSON `json:"papers"`
}

type ScholarBarchartRequest {
	ScholarId string `json:"scholar_id"`
}

type ScholarBarchartResponse {
	Achievements int `json:"achievements"`
	References   int `json:"references"`
}

type ScholarRelationNetRequest {
	ScholarId string `json:"scholar_id"`
}

type ScholarRelationNetResponse {
	CoNet CoNetJSON `json:"co_net"`
	CiNet CiNetJSON `json:"ci_net"`
}

type CoNetJSON {
	CoNetNodes []CoNetNodeJSON `json:"nodes"`
	CoNetEdges []EdgeJSON      `json:"edges"`
}

type CoNetNodeJSON {
	Id    string    `json:"id"`
	Label string    `json:"label"`
	Size  int       `json:"size"`
	CoNum int       `json:"co_num"`
	Type  string    `json:"type"`
	Style StyleJSON `json:"style"`
}

type CiNetJSON {
	CiNetNodes []CiNetNodeJSON `json:"nodes"`
	CiNetEdges []EdgeJSON      `json:"edges"`
}

type CiNetNodeJSON {
	Id    string    `json:"id"`
	Label string    `json:"label"`
	Size  int       `json:"size"`
	CiNum int       `json:"ci_num"`
	Type  string    `json:"type"`
	Style StyleJSON `json:"style"`
}

type ScholarClaimRequest {
	PaperId   string `json:"paper_id"`
	ScholarId string `json:"scholar_id"`
}

type ScholarClaimResponse {
	Code      int    `json:"code"`
	ScholarId string `json:"scholar_id"`
}

type ScholarGetAvatarRequest {
	ScholarId string `json:"scholar_id"`
}

type ScholarGetAvatarResponse {
	Code int    `json:"code"`
	Url  string `json:"url"`
}

type MovePaperRequest {
	PaperId  string `json:"paper_id"`
	OwnerId  string `json:"owner_id"`
	TargetId string `json:"target_id"`
}

type MovePaperResponse {
}

type FieldPaperRequest {
	Field string `json:"field"`
	Start int    `json:"start"`
	End   int    `json:"end"`
}

type FieldPaperResponse {
	PaperNum int                 `json:"paper_num"`
	Papers   []PaperResponseJSON `json:"papers"`
}

type FieldScholarRequest {
	Field string `json:"field"`
	Start int    `json:"start"`
	End   int    `json:"end"`
}

type FieldScholarResponse {
	ScholarNum int                `json:"scholar_num"`
	Scholars   []FieldScholarJSON `json:"scholars"`
}

type FieldScholarJSON {
	ScholarId string  `json:"scholar_id"`
	Name      string  `json:"name"`
	NPaper    int     `json:"n_paper"`
	NCitation int     `json:"n_citation"`
	Weight    float64 `json:"weight"`
}

type HomeInfoRequest {
	PaperNum   int `json:"paper_num"`
	ScholarNum int `json:"scholar_num"`
	JournalNum int `json:"journal_num"`
}

type HomeInfoResponse {
	Areas    []AreaJSON `json:"areas"`
	Journals []string   `json:"journals"`
}

type AreaJSON {
	Type     string                 `json:"type"`
	Papers   []PaperResponseJSON    `json:"papers"`
	Scholars []ScholarBasicResponse `json:"scholars"`
}