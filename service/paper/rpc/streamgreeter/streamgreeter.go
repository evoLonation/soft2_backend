// Code generated by goctl. DO NOT EDIT.
// Source: paper.proto

package streamgreeter

import (
	"context"
	paper2 "soft2_backend/service/paper/rpc/types/paper"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckScholarReq    = paper2.CheckScholarReq
	CreateScholarReply = paper2.CreateScholarReply

	StreamGreeter interface {
		CheckScholar(ctx context.Context, in *CheckScholarReq, opts ...grpc.CallOption) (*CreateScholarReply, error)
	}

	defaultStreamGreeter struct {
		cli zrpc.Client
	}
)

func NewStreamGreeter(cli zrpc.Client) StreamGreeter {
	return &defaultStreamGreeter{
		cli: cli,
	}
}

func (m *defaultStreamGreeter) CheckScholar(ctx context.Context, in *CheckScholarReq, opts ...grpc.CallOption) (*CreateScholarReply, error) {
	client := paper2.NewStreamGreeterClient(m.cli.Conn())
	return client.CheckScholar(ctx, in, opts...)
}
