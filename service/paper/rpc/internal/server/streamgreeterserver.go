// Code generated by goctl. DO NOT EDIT.
// Source: paper.proto

package server

import (
	"context"

	"soft2_backend/service/paper/rpc/internal/logic"
	"soft2_backend/service/paper/rpc/internal/svc"
	"soft2_backend/service/paper/rpc/paper"
)

type StreamGreeterServer struct {
	svcCtx *svc.ServiceContext
	paper.UnimplementedStreamGreeterServer
}

func NewStreamGreeterServer(svcCtx *svc.ServiceContext) *StreamGreeterServer {
	return &StreamGreeterServer{
		svcCtx: svcCtx,
	}
}

func (s *StreamGreeterServer) CheckScholar(ctx context.Context, in *paper.CheckScholarReq) (*paper.CreateScholarReply, error) {
	l := logic.NewCheckScholarLogic(ctx, s.svcCtx)
	return l.CheckScholar(in)
}

func (s *StreamGreeterServer) ListCheckScholar(ctx context.Context, in *paper.ListCheckScholarReq) (*paper.ListCreateScholarReply, error) {
	l := logic.NewListCheckScholarLogic(ctx, s.svcCtx)
	return l.ListCheckScholar(in)
}

func (s *StreamGreeterServer) MovePaper(ctx context.Context, in *paper.MovePaperReq) (*paper.MovePaperReply, error) {
	l := logic.NewMovePaperLogic(ctx, s.svcCtx)
	return l.MovePaper(in)
}

func (s *StreamGreeterServer) GetPaper(ctx context.Context, in *paper.GetPaperReq) (*paper.GetPaperReply, error) {
	l := logic.NewGetPaperLogic(ctx, s.svcCtx)
	return l.GetPaper(in)
}

func (s *StreamGreeterServer) ListGetPaper(ctx context.Context, in *paper.ListGetPaperReq) (*paper.ListGetPaperReply, error) {
	l := logic.NewListGetPaperLogic(ctx, s.svcCtx)
	return l.ListGetPaper(in)
}
